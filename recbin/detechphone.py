import tkinter as tk
import threading
import win32gui
import win32con
import win32api

class PhoneModelApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Theo d√µi ƒëi·ªán tho·∫°i")
        self.label = tk.Label(root, text="Model ƒëi·ªán tho·∫°i: ", font=("Arial", 16), fg="blue")
        self.label.pack(padx=10, pady=20)

        # Ch·∫°y thread l·∫Øng nghe s·ª± ki·ªán
        threading.Thread(target=self.listen_device_events, daemon=True).start()

    def update_model(self):
        print("üì± ƒêang c·∫≠p nh·∫≠t model ƒëi·ªán tho·∫°i...")

    def listen_device_events(self):
        # T·∫°o l·ªõp c·ª≠a s·ªï ƒë·ªÉ nh·∫≠n th√¥ng ƒëi·ªáp h·ªá th·ªëng
        wc = win32gui.WNDCLASS()
        wc.hInstance = win32api.GetModuleHandle(None)
        wc.lpszClassName = "HiddenWindowListener"
        wc.lpfnWndProc = self.win_proc
        win32gui.RegisterClass(wc)

        hwnd = win32gui.CreateWindow(
            wc.lpszClassName, None, 0,
            0, 0, 0, 0,
            0, 0, wc.hInstance, None
        )

        # B·∫Øt ƒë·∫ßu l·∫Øng nghe s·ª± ki·ªán h·ªá th·ªëng
        win32gui.PumpMessages()

    def win_proc(self, hwnd, msg, wparam, lparam):
        if msg == win32con.WM_DEVICECHANGE:
            if wparam == win32con.DBT_DEVICEARRIVAL:
                print("üîå ƒêi·ªán tho·∫°i ƒë∆∞·ª£c c·∫Øm v√†o.")
                self.root.after(1500, self.update_model)
            elif wparam == win32con.DBT_DEVICEREMOVECOMPLETE:
                print("‚ùå ƒêi·ªán tho·∫°i b·ªã r√∫t ra.")
        return 1  # ho·∫∑c return True

if __name__ == "__main__":
    root = tk.Tk()
    app = PhoneModelApp(root)
    root.mainloop()
